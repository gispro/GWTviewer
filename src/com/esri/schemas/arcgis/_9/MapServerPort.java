
package com.esri.schemas.arcgis._9;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * The MapServer component provides programmatic access to the contents of a map document on disk, and creates images of the map contents based on user requests. Designed for use in building map-based web services and web applications.
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.7-b01-
 * Generated source version: 2.1
 * 
 */
@WebService(name = "MapServerPort", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MapServerPort {


    /**
     * A set of name-value pairs for properties set for the map document (mxd only). These properties are string values set in the map document's Map Properties dialog and include: Title, Subject, Author, Category, Keywords and Comments.
     * 
     * @return
     *     returns com.esri.schemas.arcgis._9.PropertySet
     */
    @WebMethod(operationName = "GetDocumentInfo")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetDocumentInfo", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetDocumentInfo")
    @ResponseWrapper(localName = "GetDocumentInfoResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetDocumentInfoResponse")
    public PropertySet getDocumentInfo();

    /**
     * Gets the cache tile image information for a given map.
     * 
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.TileImageInfo
     */
    @WebMethod(operationName = "GetTileImageInfo")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetTileImageInfo", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetTileImageInfo")
    @ResponseWrapper(localName = "GetTileImageInfoResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetTileImageInfoResponse")
    public TileImageInfo getTileImageInfo(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName);

    /**
     * Returns a record set of features that meet the query filter selection criteria for the specified layer.
     * 
     * @param queryResultOptions
     * @param layerDescription
     * @param queryFilter
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.QueryResult
     */
    @WebMethod(operationName = "QueryFeatureData2")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "QueryFeatureData2", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureData2")
    @ResponseWrapper(localName = "QueryFeatureData2Response", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureData2Response")
    public QueryResult queryFeatureData2(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerDescription", targetNamespace = "")
        LayerDescription layerDescription,
        @WebParam(name = "QueryFilter", targetNamespace = "")
        QueryFilter queryFilter,
        @WebParam(name = "QueryResultOptions", targetNamespace = "")
        QueryResultOptions queryResultOptions);

    /**
     * Name of the map (data frame) as indicated by the index. The first beginning with 0.
     * 
     * @param index
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetMapName")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetMapName", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetMapName")
    @ResponseWrapper(localName = "GetMapNameResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetMapNameResponse")
    public String getMapName(
        @WebParam(name = "Index", targetNamespace = "")
        int index);

    /**
     * Returns the SQL syntax information for the specified layer.
     * 
     * @param layerID
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.SQLSyntaxInfo
     */
    @WebMethod(operationName = "GetSQLSyntaxInfo")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetSQLSyntaxInfo", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetSQLSyntaxInfo")
    @ResponseWrapper(localName = "GetSQLSyntaxInfoResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetSQLSyntaxInfoResponse")
    public SQLSyntaxInfo getSQLSyntaxInfo(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerID", targetNamespace = "")
        int layerID);

    /**
     * Exports a scale bar to an image file.  The client can create the scaleBar object and set its desired properties appropriately.  If scaleBar is Nothing/Null, a default scale bar will be generated.
     * 
     * @param backGroundColor
     * @param mapDisplay
     * @param imageDescription
     * @param mapDescription
     * @param scaleBar
     * @return
     *     returns com.esri.schemas.arcgis._9.ImageResult
     */
    @WebMethod(operationName = "ExportScaleBar")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "ExportScaleBar", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ExportScaleBar")
    @ResponseWrapper(localName = "ExportScaleBarResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ExportScaleBarResponse")
    public ImageResult exportScaleBar(
        @WebParam(name = "ScaleBar", targetNamespace = "")
        ScaleBar scaleBar,
        @WebParam(name = "MapDescription", targetNamespace = "")
        MapDescription mapDescription,
        @WebParam(name = "MapDisplay", targetNamespace = "")
        ImageDisplay mapDisplay,
        @WebParam(name = "BackGroundColor", targetNamespace = "")
        Color backGroundColor,
        @WebParam(name = "ImageDescription", targetNamespace = "")
        ImageDescription imageDescription);

    /**
     * The virtual directory for cache files.
     * 
     * @param layerID
     * @param mapName
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetVirtualCacheDirectory")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetVirtualCacheDirectory", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetVirtualCacheDirectory")
    @ResponseWrapper(localName = "GetVirtualCacheDirectoryResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetVirtualCacheDirectoryResponse")
    public String getVirtualCacheDirectory(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerID", targetNamespace = "")
        int layerID);

    /**
     * Computes the distance between two points on the specified map. The result is in the map units of the specified map.
     * 
     * @param fromPoint
     * @param toPoint
     * @param units
     * @param mapName
     * @return
     *     returns double
     */
    @WebMethod(operationName = "ComputeDistance")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "ComputeDistance", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ComputeDistance")
    @ResponseWrapper(localName = "ComputeDistanceResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ComputeDistanceResponse")
    public double computeDistance(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "FromPoint", targetNamespace = "")
        Point fromPoint,
        @WebParam(name = "ToPoint", targetNamespace = "")
        Point toPoint,
        @WebParam(name = "Units", targetNamespace = "")
        EsriUnits units);

    /**
     * The supported image return types for the map server.  A value of esriImageReturnMimeData means that only MIME data is supported.  Otherwise, either MIME data or URLs are supported.
     * 
     * @return
     *     returns com.esri.schemas.arcgis._9.EsriImageReturnType
     */
    @WebMethod(operationName = "GetSupportedImageReturnTypes")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetSupportedImageReturnTypes", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetSupportedImageReturnTypes")
    @ResponseWrapper(localName = "GetSupportedImageReturnTypesResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetSupportedImageReturnTypesResponse")
    public EsriImageReturnType getSupportedImageReturnTypes();

    /**
     * Returns the IDs of the features that meet the query filter selection criteria for the specified layer.
     * 
     * @param queryFilter
     * @param layerID
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.FIDSet
     */
    @WebMethod(operationName = "QueryFeatureIDs")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "QueryFeatureIDs", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureIDs")
    @ResponseWrapper(localName = "QueryFeatureIDsResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureIDsResponse")
    public FIDSet queryFeatureIDs(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerID", targetNamespace = "")
        int layerID,
        @WebParam(name = "QueryFilter", targetNamespace = "")
        QueryFilter queryFilter);

    /**
     * Returns a record set of features that meet the query filter selection criteria for the specified layer.
     * 
     * @param queryFilter
     * @param layerID
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.RecordSet
     */
    @WebMethod(operationName = "QueryFeatureData")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "QueryFeatureData", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureData")
    @ResponseWrapper(localName = "QueryFeatureDataResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureDataResponse")
    public RecordSet queryFeatureData(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerID", targetNamespace = "")
        int layerID,
        @WebParam(name = "QueryFilter", targetNamespace = "")
        QueryFilter queryFilter);

    /**
     * Converts a screen location to a map coordinate.
     * 
     * @param mapImageDisplay
     * @param screenXValues
     * @param screenYValues
     * @param mapDescription
     * @return
     *     returns com.esri.schemas.arcgis._9.Multipoint
     */
    @WebMethod(operationName = "ToMapPoints")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "ToMapPoints", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ToMapPoints")
    @ResponseWrapper(localName = "ToMapPointsResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ToMapPointsResponse")
    public Multipoint toMapPoints(
        @WebParam(name = "MapDescription", targetNamespace = "")
        MapDescription mapDescription,
        @WebParam(name = "MapImageDisplay", targetNamespace = "")
        ImageDisplay mapImageDisplay,
        @WebParam(name = "ScreenXValues", targetNamespace = "")
        ArrayOfInt screenXValues,
        @WebParam(name = "ScreenYValues", targetNamespace = "")
        ArrayOfInt screenYValues);

    /**
     * 
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.TileCacheInfo
     */
    @WebMethod(operationName = "GetTileCacheInfo")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetTileCacheInfo", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetTileCacheInfo")
    @ResponseWrapper(localName = "GetTileCacheInfoResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetTileCacheInfoResponse")
    public TileCacheInfo getTileCacheInfo(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName);

    /**
     * Returns a collection of Map Server Hyperlink objects for the specified layers. Only hyperlinks of visible layers are returned. If LayerIDs is Nothing/Null or empty, all layers are searched.
     * 
     * @param mapImageDisplay
     * @param layerIDs
     * @param mapDescription
     * @return
     *     returns com.esri.schemas.arcgis._9.ArrayOfMapServerHyperlink
     */
    @WebMethod(operationName = "QueryHyperlinks")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "QueryHyperlinks", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryHyperlinks")
    @ResponseWrapper(localName = "QueryHyperlinksResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryHyperlinksResponse")
    public ArrayOfMapServerHyperlink queryHyperlinks(
        @WebParam(name = "MapDescription", targetNamespace = "")
        MapDescription mapDescription,
        @WebParam(name = "MapImageDisplay", targetNamespace = "")
        ImageDisplay mapImageDisplay,
        @WebParam(name = "LayerIDs", targetNamespace = "")
        ArrayOfInt layerIDs);

    /**
     * 
     * @param layerID
     * @param mapName
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "HasLayerCache")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "HasLayerCache", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.HasLayerCache")
    @ResponseWrapper(localName = "HasLayerCacheResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.HasLayerCacheResponse")
    public boolean hasLayerCache(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerID", targetNamespace = "")
        int layerID);

    /**
     * Returns the IDs of the features that meet the query filter selection criteria for the specified layer.
     * 
     * @param layerDescription
     * @param queryFilter
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.FIDSet
     */
    @WebMethod(operationName = "QueryFeatureIDs2")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "QueryFeatureIDs2", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureIDs2")
    @ResponseWrapper(localName = "QueryFeatureIDs2Response", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureIDs2Response")
    public FIDSet queryFeatureIDs2(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerDescription", targetNamespace = "")
        LayerDescription layerDescription,
        @WebParam(name = "QueryFilter", targetNamespace = "")
        QueryFilter queryFilter);

    /**
     * Name of the document's active map (data frame).
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetDefaultMapName")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetDefaultMapName", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetDefaultMapName")
    @ResponseWrapper(localName = "GetDefaultMapNameResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetDefaultMapNameResponse")
    public String getDefaultMapName();

    /**
     * Returns the count of the features that meet the query filter selection criteria for the specified layer.
     * 
     * @param layerDescription
     * @param queryFilter
     * @param mapName
     * @return
     *     returns int
     */
    @WebMethod(operationName = "QueryFeatureCount2")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "QueryFeatureCount2", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureCount2")
    @ResponseWrapper(localName = "QueryFeatureCount2Response", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureCount2Response")
    public int queryFeatureCount2(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerDescription", targetNamespace = "")
        LayerDescription layerDescription,
        @WebParam(name = "QueryFilter", targetNamespace = "")
        QueryFilter queryFilter);

    /**
     * Returns a collection of Map Server Identify Result objects at the given location. If LayerIDs is Nothing/Null or empty, all layers are searched.
     * 
     * @param mapImageDisplay
     * @param tolerance
     * @param searchShape
     * @param identifyOption
     * @param layerIDs
     * @param mapDescription
     * @return
     *     returns com.esri.schemas.arcgis._9.ArrayOfMapServerIdentifyResult
     */
    @WebMethod(operationName = "Identify")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "Identify", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.Identify")
    @ResponseWrapper(localName = "IdentifyResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.IdentifyResponse")
    public ArrayOfMapServerIdentifyResult identify(
        @WebParam(name = "MapDescription", targetNamespace = "")
        MapDescription mapDescription,
        @WebParam(name = "MapImageDisplay", targetNamespace = "")
        ImageDisplay mapImageDisplay,
        @WebParam(name = "SearchShape", targetNamespace = "")
        Geometry searchShape,
        @WebParam(name = "Tolerance", targetNamespace = "")
        int tolerance,
        @WebParam(name = "IdentifyOption", targetNamespace = "")
        EsriIdentifyOption identifyOption,
        @WebParam(name = "LayerIDs", targetNamespace = "")
        ArrayOfInt layerIDs);

    /**
     * 
     * @param mapName
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "IsFixedScaleMap")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "IsFixedScaleMap", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.IsFixedScaleMap")
    @ResponseWrapper(localName = "IsFixedScaleMapResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.IsFixedScaleMapResponse")
    public boolean isFixedScaleMap(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName);

    /**
     * Returns a collection of Map Server Legend Info objects for the specified layers. If layerIDs is Nothing/Null or empty, legend information for all layers is returned.
     * 
     * @param imageType
     * @param legendPatch
     * @param layerIDs
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.ArrayOfMapServerLegendInfo
     */
    @WebMethod(operationName = "GetLegendInfo")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetLegendInfo", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetLegendInfo")
    @ResponseWrapper(localName = "GetLegendInfoResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetLegendInfoResponse")
    public ArrayOfMapServerLegendInfo getLegendInfo(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerIDs", targetNamespace = "")
        ArrayOfInt layerIDs,
        @WebParam(name = "LegendPatch", targetNamespace = "")
        MapServerLegendPatch legendPatch,
        @WebParam(name = "ImageType", targetNamespace = "")
        ImageType imageType);

    /**
     * Converts a map coordinate to a screen location.
     * 
     * @param mapImageDisplay
     * @param screenXValues
     * @param mapPoints
     * @param screenYValues
     * @param mapDescription
     */
    @WebMethod(operationName = "FromMapPoints")
    @RequestWrapper(localName = "FromMapPoints", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.FromMapPoints")
    @ResponseWrapper(localName = "FromMapPointsResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.FromMapPointsResponse")
    public void fromMapPoints(
        @WebParam(name = "MapDescription", targetNamespace = "")
        MapDescription mapDescription,
        @WebParam(name = "MapImageDisplay", targetNamespace = "")
        ImageDisplay mapImageDisplay,
        @WebParam(name = "MapPoints", targetNamespace = "")
        Multipoint mapPoints,
        @WebParam(name = "ScreenXValues", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ArrayOfInt> screenXValues,
        @WebParam(name = "ScreenYValues", targetNamespace = "", mode = WebParam.Mode.OUT)
        Holder<ArrayOfInt> screenYValues);

    /**
     * Gets the cache description information for a given map.
     * 
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.CacheDescriptionInfo
     */
    @WebMethod(operationName = "GetCacheDescriptionInfo")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetCacheDescriptionInfo", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetCacheDescriptionInfo")
    @ResponseWrapper(localName = "GetCacheDescriptionInfoResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetCacheDescriptionInfoResponse")
    public CacheDescriptionInfo getCacheDescriptionInfo(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName);

    /**
     * 
     * @param level
     * @param column
     * @param format
     * @param row
     * @param mapName
     * @return
     *     returns byte[]
     */
    @WebMethod(operationName = "GetMapTile")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetMapTile", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetMapTile")
    @ResponseWrapper(localName = "GetMapTileResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetMapTileResponse")
    public byte[] getMapTile(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "Level", targetNamespace = "")
        int level,
        @WebParam(name = "Row", targetNamespace = "")
        int row,
        @WebParam(name = "Column", targetNamespace = "")
        int column,
        @WebParam(name = "Format", targetNamespace = "")
        String format);

    /**
     * 
     * @param level
     * @param column
     * @param format
     * @param layerID
     * @param row
     * @param mapName
     * @return
     *     returns byte[]
     */
    @WebMethod(operationName = "GetLayerTile")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetLayerTile", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetLayerTile")
    @ResponseWrapper(localName = "GetLayerTileResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetLayerTileResponse")
    public byte[] getLayerTile(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerID", targetNamespace = "")
        int layerID,
        @WebParam(name = "Level", targetNamespace = "")
        int level,
        @WebParam(name = "Row", targetNamespace = "")
        int row,
        @WebParam(name = "Column", targetNamespace = "")
        int column,
        @WebParam(name = "Format", targetNamespace = "")
        String format);

    /**
     * Returns information about a map (data frame).
     * 
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.MapServerInfo
     */
    @WebMethod(operationName = "GetServerInfo")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetServerInfo", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetServerInfo")
    @ResponseWrapper(localName = "GetServerInfoResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetServerInfoResponse")
    public MapServerInfo getServerInfo(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName);

    /**
     * The number of maps (data frames) in the document.
     * 
     * @return
     *     returns int
     */
    @WebMethod(operationName = "GetMapCount")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetMapCount", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetMapCount")
    @ResponseWrapper(localName = "GetMapCountResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetMapCountResponse")
    public int getMapCount();

    /**
     * Returns the count of the features that meet the query filter selection criteria for the specified layer.
     * 
     * @param queryFilter
     * @param layerID
     * @param mapName
     * @return
     *     returns int
     */
    @WebMethod(operationName = "QueryFeatureCount")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "QueryFeatureCount", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureCount")
    @ResponseWrapper(localName = "QueryFeatureCountResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.QueryFeatureCountResponse")
    public int queryFeatureCount(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerID", targetNamespace = "")
        int layerID,
        @WebParam(name = "QueryFilter", targetNamespace = "")
        QueryFilter queryFilter);

    /**
     * A set of name-value pairs for properties set for the MapServer Service Configuration Restrictions.
     * 
     * @return
     *     returns com.esri.schemas.arcgis._9.PropertySet
     */
    @WebMethod(operationName = "GetServiceConfigurationInfo")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetServiceConfigurationInfo", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetServiceConfigurationInfo")
    @ResponseWrapper(localName = "GetServiceConfigurationInfoResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetServiceConfigurationInfoResponse")
    public PropertySet getServiceConfigurationInfo();

    /**
     * Gets the cache control information for a given map.
     * 
     * @param mapName
     * @return
     *     returns com.esri.schemas.arcgis._9.CacheControlInfo
     */
    @WebMethod(operationName = "GetCacheControlInfo")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetCacheControlInfo", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetCacheControlInfo")
    @ResponseWrapper(localName = "GetCacheControlInfoResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetCacheControlInfoResponse")
    public CacheControlInfo getCacheControlInfo(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName);

    /**
     * 
     * @param mapName
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "HasSingleFusedMapCache")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "HasSingleFusedMapCache", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.HasSingleFusedMapCache")
    @ResponseWrapper(localName = "HasSingleFusedMapCacheResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.HasSingleFusedMapCacheResponse")
    public boolean hasSingleFusedMapCache(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName);

    /**
     * 
     * @param layerID
     * @param mapName
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetCacheName")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "GetCacheName", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetCacheName")
    @ResponseWrapper(localName = "GetCacheNameResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.GetCacheNameResponse")
    public String getCacheName(
        @WebParam(name = "MapName", targetNamespace = "")
        String mapName,
        @WebParam(name = "LayerID", targetNamespace = "")
        int layerID);

    /**
     * Computes the scale of the specified map, at the given map extent, for an image with the given size.
     * 
     * @param mapImageDisplay
     * @param mapDescription
     * @return
     *     returns double
     */
    @WebMethod(operationName = "ComputeScale")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "ComputeScale", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ComputeScale")
    @ResponseWrapper(localName = "ComputeScaleResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ComputeScaleResponse")
    public double computeScale(
        @WebParam(name = "MapDescription", targetNamespace = "")
        MapDescription mapDescription,
        @WebParam(name = "MapImageDisplay", targetNamespace = "")
        ImageDisplay mapImageDisplay);

    /**
     * Returns a collection of Map Server Find Result objects that contain the given search string. If LayerIDs is Nothing/Null or empty, all layers are searched.
     * 
     * @param mapImageDisplay
     * @param searchString
     * @param findOption
     * @param searchFields
     * @param contains
     * @param layerIDs
     * @param mapDescription
     * @return
     *     returns com.esri.schemas.arcgis._9.ArrayOfMapServerFindResult
     */
    @WebMethod(operationName = "Find")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "Find", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.Find")
    @ResponseWrapper(localName = "FindResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.FindResponse")
    public ArrayOfMapServerFindResult find(
        @WebParam(name = "MapDescription", targetNamespace = "")
        MapDescription mapDescription,
        @WebParam(name = "MapImageDisplay", targetNamespace = "")
        ImageDisplay mapImageDisplay,
        @WebParam(name = "SearchString", targetNamespace = "")
        String searchString,
        @WebParam(name = "Contains", targetNamespace = "")
        boolean contains,
        @WebParam(name = "SearchFields", targetNamespace = "")
        String searchFields,
        @WebParam(name = "FindOption", targetNamespace = "")
        EsriFindOption findOption,
        @WebParam(name = "LayerIDs", targetNamespace = "")
        ArrayOfInt layerIDs);

    /**
     * Generates an image of the map, based on the given map description, and writes the image to a specified file on disk. Supported file types are: 'bmp', 'jpg', 'tif', 'png'/'png8', 'png24', 'emf', 'ps', 'pdf', 'ai', 'gif', and 'svg'/'svgz'.
     * 
     * @param imageDescription
     * @param mapDescription
     * @return
     *     returns com.esri.schemas.arcgis._9.MapImage
     */
    @WebMethod(operationName = "ExportMapImage")
    @WebResult(name = "Result", targetNamespace = "")
    @RequestWrapper(localName = "ExportMapImage", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ExportMapImage")
    @ResponseWrapper(localName = "ExportMapImageResponse", targetNamespace = "http://www.esri.com/schemas/ArcGIS/9.3", className = "com.esri.schemas.arcgis._9.ExportMapImageResponse")
    public MapImage exportMapImage(
        @WebParam(name = "MapDescription", targetNamespace = "")
        MapDescription mapDescription,
        @WebParam(name = "ImageDescription", targetNamespace = "")
        ImageDescription imageDescription);

}
